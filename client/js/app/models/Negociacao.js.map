{"version":3,"sources":["../../app-es6/models/Negociacao.js"],"names":["Negociacao","data","quantidade","valor","_data","Date","getTime","_quantidade","_valor","Object","freeze"],"mappings":";;;;;;IAAMA,U;AAEL,qBAAYC,IAAZ,EAAkBC,UAAlB,EAA8BC,KAA9B,EAAoC;AAAA;;AAEnC;AACA,OAAKC,KAAL,GAAa,IAAIC,IAAJ,CAASJ,KAAKK,OAAL,EAAT,CAAb,CAHmC,CAGG;AACtC,OAAKC,WAAL,GAAmBL,UAAnB;AACA,OAAKM,MAAL,GAAcL,KAAd;AACAM,SAAOC,MAAP,CAAc,IAAd,EANmC,CAMd;AACrB;AACD;;;;;sBACY;AACX,UAAO,KAAKH,WAAL,GAAmB,KAAKC,MAA/B;AACA;;AAED;;;;sBACU;AACT;AACA,UAAO,IAAIH,IAAJ,CAAS,KAAKD,KAAL,CAAWE,OAAX,EAAT,CAAP,CAFS,CAE8B;AACvC;;;sBAEe;AACf,UAAO,KAAKC,WAAZ;AACA;;;sBAEU;AACV,UAAO,KAAKC,MAAZ;AACA;;;;;;AAGF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Negociacao.js","sourcesContent":["class Negociacao{\n\n\tconstructor(data, quantidade, valor){\n\n\t\t//this._data = data;\n\t\tthis._data = new Date(data.getTime());//Método de programação defenciva para que o programador não consiga manipular a data.\n\t\tthis._quantidade = quantidade;\n\t\tthis._valor = valor;\n\t\tObject.freeze(this); //Congelando a instância para que não tenha alteração - O object.freeze é shallow, ele fica na superficie. Quando congelamos um valor, não podemos alterá-lo. Porém, como _data é um objeto, não entrará como uma das propriedades do objeto. Então, não é feito o que chamamos de deep freeze. Quando trabalhamos com um objeto e dentro dele temos outras propriedades, estas não ficarão congeladas.\n\t}\n\t//Criação do método para obter volume\n\tget volume(){\n\t\treturn this._quantidade * this._valor;\n\t}\n\n\t//Métodos Acessadores ou Métodos de Leitura\n\tget data(){\n\t\t//return this._data;\n\t\treturn new Date(this._data.getTime()); //Método de programação defenciva para que o programador não consiga manipular a data.\n\t}\n\n\tget quantidade(){\n\t\treturn this._quantidade;\n\t}\n\n\tget valor(){\n\t\treturn this._valor;\n\t}\n}\n\n// class Aluno {\n\n//     constructor(matricula, nome) {\n//         this.matricula = matricula;\n//         this.nome = nome;\n//     }\n// }\n\n// class Prova {\n\n//     constructor(aluno, nota) {\n//         this.aluno = aluno;\n//         this.nota = nota;\n//     }\n\n//     var avaliacoes = [\n// \t    new Prova(new Aluno(1, 'Luana'), 8),\n// \t    new Prova(new Aluno(2, 'Cássio'), 6),\n// \t    new Prova(new Aluno(3, 'Barney'), 9),\n// \t    new Prova(new Aluno(4, 'Bira'), 5)\n// \t];\n// }"]}