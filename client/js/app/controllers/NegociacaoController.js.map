{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagemView","_mensagem","Mensagem","MensagemView","ordemAtual","_service","NegociacaoService","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","error","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","erro","importa","Negociacao","DateHelper","textoParaData","value","parseInt","parseFloat","apaga","esvazia","focus","ConnectionFactory","getConnection","transaction","connection","store","objectStore","Date","request","add","abort","onabort","console","log","e","onsuccess","onerror","coluna","_ordemAtual","inverteOrdem","ordena","a","b"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController{\n\n\tconstructor(){\n\n\t\tlet $ = document.querySelector.bind(document);\n\n\t\tthis._inputData = $('#data');\n\t\tthis._inputQuantidade = $('#quantidade');\n\t\tthis._inputValor = $('#valor');\n\n\t\tthis._listaNegociacoes = new Bind(\n\t\t\tnew ListaNegociacoes(),\n\t\t\tnew NegociacoesView($('#negociacoesView')),\n\t\t\t'adiciona','esvazia', 'ordena', 'inverteOrdem');\n\t\t\n\t\tthis._mensagemView = \n\t\tthis._mensagem = new Bind(\n\t\t\tnew Mensagem(),\n\t\t\tnew MensagemView($('#mensagemView')),\n\t\t\t'texto');\n\n\t\tthis.ordemAtual = '';\n\t\t\n\t\tthis._service = new NegociacaoService();\n\n\t\tthis._init();\n\n\n\t}\n\n\t_init(){\n\n\t\t//DAO\n\t\tthis._service\n\t\t\t.lista()\n\t\t\t.then(negociacoes =>\n\t\t\t\tnegociacoes.forEach(negociacao => \n\t\t\t\t\tthis._listaNegociacoes.adiciona(negociacao)))\n\t\t\t.catch(erro => this._mensagem.texto = error);\n\n\t\t//Importar negociaçoes automaticamente a cada 3 segundos\t\n\t\tsetInterval(() => {\n\t\t\tthis.importaNegociacoes();\n\t\t}, 30000);\n\n\t}\n\n\tadiciona(event){\n\t\tevent.preventDefault();\n\n        let negociacao = this._criaNegociacao();\n\n        this._service\n            .cadastra(negociacao)\n            .then(mensagem => {\n                this._listaNegociacoes.adiciona(negociacao);\n                this._mensagem.texto = mensagem; \n                this._limpaFormulario();  \n            }).catch(erro => this._mensagem.texto = erro);\n\t\t/*\n\t\ttry{\n\t\t\tthis._listaNegociacoes.adiciona(this._criaNegociacao());\n\t\t\t//this._negociacoesView.update(this._listaNegociacoes);\n\n\t\t\tthis._mensagem.texto = \"Negociação adicionada com sucesso\";\n\t\t\t//this._mensagemView.update(this._mensagem);\n\n\t\t\tthis._limpaFormulario();\n\t\t\t//console.log(this._listaNegociacoes.negociacoes);\n\t\t\t// console.log(negociacao);\n\t\t\t// console.log(DateHelper.dataParaTexto(negociacao.data));\n\n\t\t}catch(erro){\n\t\t\tthis._mensagem.texto = erro;\n\t\t}\n\t\t*/\n\t}\n\n\timportaNegociacoes(){\n\n\t\tthis._service\n\t\t\t.importa(this._listaNegociacoes.negociacoes)\n\t\t\t.then(negociacoes => negociacoes.forEach(negociacao => {\n\t\t\t\tthis._listaNegociacoes.adiciona(negociacao);\t\n\t\t\t\tthis._mensagem.texto = 'Negociações do período importadas com sucesso';\n\t\t\t}))\n\t        .catch(error => this._mensagem.texto = error);  \n/*\n\t\tPromise.all([\n\t\t\t\tservice.obterNegociacoesDaSemana(),\n\t\t\t\tservice.obterNegociacoesDaSemanaAnterior(),\n\t\t\t\tservice.obterNegociacoesDaSemanaRetrasada()\n\t\t\t]).then(negociacoes => {\n\t\t\t\tnegociacoes\n\t\t\t\t\t.reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\n\t\t\t\t\t.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n\t\t\t\tthis._mensagem.texto = 'Negociações importadas com sucesso';\n\t\t\t\t\t\n\t\t\t}).catch(erro => this._mensagem.texto = erro);\n\n\n\t\t\n\t\tservice.obterNegociacoesDaSemana()\n\t\t\t.then(negociacoes => {\n\t\t\t\tnegociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n\t\t\t\tthis._mensagem.texto = 'Negociação da semana obtida com sucesso';\n\t\t\t})\n\t\t\t.catch(erro => this._mensagem.texto = erro);\n\n\t\tservice.obterNegociacoesDaSemanaAnterior()\n\t\t\t.then(negociacoes => {\n\t\t\t\tnegociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n\t\t\t\tthis._mensagem.texto = 'Negociação da semana anterior obtida com sucesso';\n\t\t\t})\n\t\t\t.catch(erro => this._mensagem.texto = erro);\n\n\t\tservice.obterNegociacoesDaSemanaRetrasada()\n\t\t\t.then(negociacoes => {\n\t\t\t\tnegociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n\t\t\t\tthis._mensagem.texto = 'Negociação da semana retrasada obtida com sucesso';\n\t\t\t})\n\t\t\t.catch(erro => this._mensagem.texto = erro);\n\t\t*/\t\n\n\t\t/*\n\t\tlet service = new NegociacaoService();\n\t\t\n\t\tservice.obterNegociacoesDaSemana((erro, negociacoes) => {\n\t\t\tif(erro){\n\t\t\t\tthis._mensagem.texto = erro;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnegociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n\t\t\t\t\t\t\n\t\t\tservice.obterNegociacoesDaSemanaAnterior((erro, negociacoes) => {\n\t\t\t\tif(erro){\n\t\t\t\t\tthis._mensagem.texto = erro;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tnegociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n\t\t\t\t\n\t\t\t\tservice.obterNegociacoesDaSemanaRetrasada((erro, negociacoes) => {\n\t\t\t\t\tif(erro){\n\t\t\t\t\t\tthis._mensagem.texto = erro;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tnegociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n\t\t\t\t\tthis._mensagem.texto = 'Negociações importadas com sucesso'\n\t\t\t\t});\n\t\t\t});\n\t\t});*/\n\t}\n\n\t_criaNegociacao(){\n\t\treturn new Negociacao(\n\t\t\tDateHelper.textoParaData(this._inputData.value),\n\t\t\tparseInt(this._inputQuantidade.value),\n\t\t\tparseFloat(this._inputValor.value)\n\t\t);\n\t}\n\n\tapaga(){\n\n\t\tthis._service\n\t\t\t.apaga()\n\t\t\t.then(mensagem => {\n\t\t\t\tthis._mensagem.texto = mensagem;\n\t\t\t\tthis._listaNegociacoes.esvazia();\n\t\t\t}).catch(erro => this._mensagem.texto = erro);\n\n\t\t// ConnectionFactory\n\t\t// \t.getConnection()\n\t\t// \t.then(connection => new NegociacaoDAO(connection))\n\t\t// \t.then(dao => dao.apagaTodos())\n\t\t// \t.then(mensagem => {\n\t\t// \t\tthis._mensagem.texto = mensagem;\n\t\t// \t\tthis._listaNegociacoes.esvazia();\n\t\t// \t});\n\t\t/*\t\n\t\tthis._listaNegociacoes.esvazia();\n\t\t//this._negociacoesView.update(this._listaNegociacoes);\n\n\t\tthis._mensagem.texto = 'Negociações apagadas com sucesso';\n\t\t//this._mensagemView.update(this._mensagem);\n\t\t*/\n\t}\n\n\t_limpaFormulario(){\n\t\tthis._inputData.value = '';\n\t\tthis._inputQuantidade.value = 1;\n\t\tthis._inputValor.value = 0.0;\n\n\t\tthis._inputData.focus();\n\t}\n\n\tabort(){\n\n\t\tConnectionFactory\n\t\t\t.getConnection()\n\t\t\t.then(connection => {\n\n\t\t\t\tlet transaction = connection.transaction(['negociacoes'], 'readwrite');\n\n\t            let store = transaction.objectStore('negociacoes');\n\n\t            let negociacao = new Negociacao(new Date(), 1, 200);\n\n\t            let request = store.add(negociacao);\n\n\t            // #### VAI CANCELAR A TRANSAÇÃO. O evento onerror será chamado.\n\t            transaction.abort(); \n\n\t            transaction.onabort = e => {\n\t                console.log(e);\n\t                console.log('Transação abortada');\n\t            };\n\n\t            request.onsuccess = e => {\n\n\t                console.log('Negociação incluida com sucesso');\n\t            };\n\n\t            request.onerror = e => {\n\n\t                console.log('Não foi possível incluir a negociação');\n\t            };\n\n\t\t\t})\n\t}\n\n\tordena(coluna){\n\t\tif(this._ordemAtual == coluna){\n\t\t\tthis._listaNegociacoes.inverteOrdem();\n\t\t}else{\n\t\t\tthis._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\n\t\t}\n\t\tthis._ordemAtual = coluna;\n\t}\n\n}\n\n\n\n"]}